---
openapi: 3.0.3
info:
  title: Blueprint API
  description: |
    This API allows managing Client entities.
  contact:
    name: API Support
  version: 1.0.0
  x-audience: internal-public
servers:
  - url: /
tags:
  - name: client
    description: Management of Client entity store
paths:
  /clients:
    get:
      tags:
        - client
      summary: Searches existing clients
      description: Given a set of matching filters
      operationId: searchClients
      parameters:
        - name: name
          in: query
          description: term used as matching criteria for the name attribute
          required: false
          schema:
            type: string
        - name: term
          in: query
          description: term used as matching criteria for any attribute
          required: false
          schema:
            type: string
        - name: activatedOnly
          in: query
          description: result has to contain only activated clients
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClientOutput'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

    post:
      tags:
        - client
      summary: Add a new client to the store
      description: |
        A valid response contains a generated unique ID and the creation date
      operationId: addClient
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientInput'
        required: true
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientOutput'
        '400':
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemOutput'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /clients/{id}:
    get:
      tags:
        - client
      summary: Find client by ID
      description: Returns a single client
      operationId: getClientById
      parameters:
        - name: id
          in: path
          description: ID of client to return
          required: true
          schema:
            type: string
            format: uuid
        - name: activatedOnly
          in: query
          description: consider activated clients only
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientOutput'
        '400':
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemOutput'
        '404':
          description: Client not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemOutput'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
    put:
      tags:
        - client
      summary: Update an existing client
      operationId: updateClient
      parameters:
        - name: id
          in: path
          description: Client id to update
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientInput'
        required: true
      responses:
        '204':
          description: successful operation
        '400':
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemOutput'
        '404':
          description: Client not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemOutput'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

    delete:
      tags:
        - client
      summary: Deletes a client
      operationId: deleteClient
      parameters:
        - name: id
          in: path
          description: Client id to delete
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: successful operation
        '400':
          description: Client cannot be deleted
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemOutput'
        '404':
          description: Client not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemOutput'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /clients/{id}/restore:
    post:
      tags:
        - client
      summary: Restores a client
      operationId: restoreClient
      parameters:
        - name: id
          in: path
          description: Client id to restore
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientOutput'
        '400':
          description: Client cannot be restored
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemOutput'
        '404':
          description: Client not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemOutput'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /clients/search:
    get:
      tags:
        - client
      summary: Searches over the whole hierarchy
      description: Given a term
      operationId: search
      parameters:
        - name: term
          in: query
          description: term used as matching criteria for any attribute
          required: true
          schema:
            type: string
        - name: activatedOnly
          in: query
          description: consider activated clients only
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchOutput'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

components:
  schemas:
    SearchOutput:
      type: object
      properties:
        clients:
          type: array
          items:
            $ref: '#/components/schemas/ClientOutput'
    ClientInput:
      type: object
      properties:
        name:
          type: string
        age:
          type: number
          minimum: 0
      required:
        - name
    ClientOutput:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        age:
          type: number
          minimum: 0
        createdAt:
          type: string
          format: datetime
        activated:
          type: boolean
      required:
        - id
        - name
        - createdAt

    ProblemOutput:
      type: object
      properties:
        title:
          type: string
          description: The error title.
          example: Bad Request
        status:
          type: integer
          description: The HTTP status.
          format: int32
          example: 400
        detail:
          type: string
          description: Detailed information about the invalid request.
          example: '''name'' attribute is expected.'
      required:
        - title
        - status
        - detail

  responses:
    UnauthorizedError:
      description: Access token is missing or invalid
